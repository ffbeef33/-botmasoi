# cogs/info_commands.py
# Module ch·ª©a c√°c l·ªánh slash ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin

import discord
from discord import app_commands
from discord.ext import commands
import logging

from constants import ROLES, VILLAGER_ROLES, WEREWOLF_ROLES, ROLE_DESCRIPTIONS, ROLE_LINKS, BOT_VERSION
from db import get_leaderboard

logger = logging.getLogger(__name__)

class InfoCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name="help_masoi", description="Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n ch∆°i Ma S√≥i")
    @app_commands.describe(topic="Ch·ªß ƒë·ªÅ c·∫ßn xem h∆∞·ªõng d·∫´n")
    @app_commands.choices(topic=[
        app_commands.Choice(name="T·ªïng quan", value="overview"),
        app_commands.Choice(name="L·ªánh bot", value="commands"),
        app_commands.Choice(name="Vai tr√≤", value="roles"),
        app_commands.Choice(name="Lu·∫≠t ch∆°i", value="rules")
    ])
    async def help_masoi(self, interaction: discord.Interaction, topic: str = "overview"):
        await interaction.response.defer()
        
        if topic == "overview":
            embed = discord.Embed(
                title="üê∫ H∆∞·ªõng D·∫´n Bot Ma S√≥i DeWolfVie",
                description=(
                    "Bot Ma S√≥i DeWolfVie gi√∫p qu·∫£n l√Ω tr√≤ ch∆°i Ma S√≥i tr√™n Discord v·ªõi giao di·ªán ƒë∆°n gi·∫£n v√† d·ªÖ s·ª≠ d·ª•ng."
                    "\n\nS·ª≠ d·ª•ng `/help_masoi topic:` ƒë·ªÉ xem h∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ t·ª´ng ch·ªß ƒë·ªÅ c·ª• th·ªÉ."
                ),
                color=discord.Color.blue()
            )
            embed.add_field(
                name="üéÆ B·∫Øt ƒê·∫ßu Game",
                value="D√πng `/start_game` ƒë·ªÉ b·∫Øt ƒë·∫ßu m·ªôt game m·ªõi. B·∫°n s·∫Ω c·∫ßn ch·ªçn k√™nh voice, s·ªë l∆∞·ª£ng v√† danh s√°ch ng∆∞·ªùi ch∆°i, c≈©ng nh∆∞ ph√¢n chia vai tr√≤.",
                inline=False
            )
            embed.add_field(
                name="üèÜ C√°c Ch·ªß ƒê·ªÅ H∆∞·ªõng D·∫´n",
                value=(
                    "‚Ä¢ **commands**: Danh s√°ch v√† chi ti·∫øt c√°c l·ªánh\n"
                    "‚Ä¢ **roles**: Th√¥ng tin v·ªÅ c√°c vai tr√≤ trong game\n"
                    "‚Ä¢ **rules**: Lu·∫≠t ch∆°i v√† c√°ch th·ª©c ho·∫°t ƒë·ªông"
                ),
                inline=False
            )
        elif topic == "commands":
            embed = self._create_commands_help_embed()
        elif topic == "roles":
            embed = self._create_roles_help_embed()
        elif topic == "rules":
            embed = self._create_rules_help_embed()
        else:
            embed = discord.Embed(
                title="‚ùå Ch·ªß ƒë·ªÅ kh√¥ng h·ª£p l·ªá",
                description="Vui l√≤ng ch·ªçn m·ªôt ch·ªß ƒë·ªÅ h·ª£p l·ªá: overview, commands, roles, ho·∫∑c rules.",
                color=discord.Color.red()
            )
        
        embed.set_footer(text=BOT_VERSION)
        await interaction.followup.send(embed=embed)
    
    def _create_commands_help_embed(self):
        """T·∫°o embed ch·ª©a th√¥ng tin v·ªÅ c√°c l·ªánh"""
        embed = discord.Embed(
            title="üìù Danh S√°ch L·ªánh Bot Ma S√≥i",
            description="T·∫•t c·∫£ c√°c l·ªánh b·∫Øt ƒë·∫ßu b·∫±ng `/`",
            color=discord.Color.blue()
        )
        
        commands = [
            {"name": "start_game", "desc": "B·∫Øt ƒë·∫ßu game m·ªõi. Cho ph√©p ch·ªçn k√™nh voice, s·ªë l∆∞·ª£ng ng∆∞·ªùi ch∆°i, v√† vai tr√≤."},
            {"name": "pause_game", "desc": "T·∫°m d·ª´ng game hi·ªán t·∫°i. C√°c pha s·∫Ω d·ª´ng l·∫°i, ng∆∞·ªùi ch∆°i kh√¥ng th·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông."},
            {"name": "resume_game", "desc": "Ti·∫øp t·ª•c game ƒë√£ b·ªã t·∫°m d·ª´ng."},
            {"name": "reset_game", "desc": "Reset l·∫°i game hi·ªán t·∫°i v√† b·∫Øt ƒë·∫ßu l·∫°i v·ªõi c√πng ng∆∞·ªùi ch∆°i v√† vai tr√≤ (x√°o tr·ªôn)."},
            {"name": "end_game", "desc": "K·∫øt th√∫c game hi·ªán t·∫°i v√† d·ªçn d·∫πp t√†i nguy√™n."},
            {"name": "roles_list", "desc": "Xem danh s√°ch t·∫•t c·∫£ vai tr√≤ trong game."},
            {"name": "roles", "desc": "Xem chi ti·∫øt v·ªÅ m·ªôt vai tr√≤ c·ª• th·ªÉ."},
            {"name": "status", "desc": "Ki·ªÉm tra tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa game."},
            {"name": "leaderboard", "desc": "Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng ng∆∞·ªùi ch∆°i."},
            {"name": "check_mute", "desc": "Ki·ªÉm tra ng∆∞·ªùi ch∆°i n√†o ƒëang b·ªã mute."},
            {"name": "help_masoi", "desc": "Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ ch∆°i game Ma S√≥i."}
        ]
        
        for cmd in commands:
            embed.add_field(name=f"/{cmd['name']}", value=cmd['desc'], inline=False)
            
        return embed
    
    def _create_roles_help_embed(self):
        """T·∫°o embed ch·ª©a th√¥ng tin v·ªÅ c√°c vai tr√≤"""
        embed = discord.Embed(
            title="üë§ Vai Tr√≤ Trong Ma S√≥i",
            description="Game Ma S√≥i c√≥ hai phe ch√≠nh: Phe D√¢n v√† Phe S√≥i. M·ªói vai tr√≤ c√≥ kh·∫£ nƒÉng ƒë·∫∑c bi·ªát ri√™ng.",
            color=discord.Color.blue()
        )
        
        # Vai tr√≤ phe D√¢n
        villager_roles_desc = []
        for role in VILLAGER_ROLES:
            desc = ROLE_DESCRIPTIONS.get(role, "Kh√¥ng c√≥ m√¥ t·∫£")
            villager_roles_desc.append(f"**{role}**: {desc[:100]}...")
            
        embed.add_field(name="üü¢ Phe D√¢n", value="\n\n".join(villager_roles_desc), inline=False)
        
        # Vai tr√≤ phe S√≥i
        werewolf_roles_desc = []
        for role in WEREWOLF_ROLES:
            desc = ROLE_DESCRIPTIONS.get(role, "Kh√¥ng c√≥ m√¥ t·∫£")
            werewolf_roles_desc.append(f"**{role}**: {desc[:100]}...")
            
        embed.add_field(name="üî¥ Phe S√≥i", value="\n\n".join(werewolf_roles_desc), inline=False)
        
        embed.add_field(
            name="Xem Chi Ti·∫øt",
            value="S·ª≠ d·ª•ng l·ªánh `/roles <t√™n vai tr√≤>` ƒë·ªÉ xem th√¥ng tin chi ti·∫øt v·ªÅ m·ªôt vai tr√≤ c·ª• th·ªÉ.",
            inline=False
        )
        
        embed.set_footer(text="Tham kh·∫£o th√™m t·∫°i: https://www.dewolfvie.net/vn/chucnang")
        return embed
    
    def _create_rules_help_embed(self):
        """T·∫°o embed ch·ª©a lu·∫≠t ch∆°i"""
        embed = discord.Embed(
            title="üìú Lu·∫≠t Ch∆°i Ma S√≥i",
            description="Game Ma S√≥i g·ªìm c√°c pha ch√≠nh: Ban Ng√†y v√† Ban ƒê√™m. M·ªói pha c√≥ c√°c ho·∫°t ƒë·ªông kh√°c nhau.",
            color=discord.Color.blue()
        )
        
        # M·ª•c ti√™u game
        embed.add_field(
            name="üéØ M·ª•c Ti√™u",
            value=(
                "‚Ä¢ **Phe D√¢n**: Ti√™u di·ªát t·∫•t c·∫£ Ma S√≥i\n"
                "‚Ä¢ **Phe S√≥i**: Ti√™u di·ªát ƒë·ªß D√¢n l√†ng ƒë·ªÉ s·ªë S√≥i l·ªõn h∆°n ho·∫∑c b·∫±ng s·ªë D√¢n"
            ),
            inline=False
        )
        
        # Pha Ban Ng√†y
        embed.add_field(
            name="‚òÄÔ∏è Pha Ban Ng√†y",
            value=(
                "1. Th·∫£o lu·∫≠n v·ªÅ nh·ªØng ng∆∞·ªùi ch·∫øt ƒë√™m qua v√† c√°c manh m·ªëi\n"
                "2. B·ªè phi·∫øu treo c·ªï m·ªôt ng∆∞·ªùi (ho·∫∑c kh√¥ng treo ai)\n"
                "3. Ng∆∞·ªùi b·ªã b·ªè phi·∫øu nhi·ªÅu nh·∫•t s·∫Ω b·ªã treo c·ªï v√† ti·∫øt l·ªô vai tr√≤"
            ),
            inline=False
        )
        
        # Pha Ban ƒê√™m
        embed.add_field(
            name="üåô Pha Ban ƒê√™m",
            value=(
                "1. M·ªói ng∆∞·ªùi ch∆°i ƒë∆∞·ª£c chuy·ªÉn v√†o ph√≤ng ri√™ng\n"
                "2. C√°c vai tr√≤ ƒë·∫∑c bi·ªát th·ª±c hi·ªán h√†nh ƒë·ªông\n"
                "3. C√°c vai kh√¥ng c√≥ h√†nh ƒë·ªông ƒë√™m ph·∫£i gi·∫£i to√°n ƒë·ªÉ ƒë∆∞·ª£c b·ªè phi·∫øu\n"
                "4. K·∫øt th√∫c ƒë√™m, nh·ªØng ng∆∞·ªùi b·ªã gi·∫øt s·∫Ω ƒë∆∞·ª£c c√¥ng b·ªë"
            ),
            inline=False
        )
        
        # C√°c l∆∞u √Ω quan tr·ªçng
        embed.add_field(
            name="‚ö†Ô∏è L∆∞u √ù Quan Tr·ªçng",
            value=(
                "‚Ä¢ Ng∆∞·ªùi ch·∫øt kh√¥ng ƒë∆∞·ª£c n√≥i chuy·ªán v·ªõi ng∆∞·ªùi s·ªëng v·ªÅ game\n"
                "‚Ä¢ Bot s·∫Ω di chuy·ªÉn v√† qu·∫£n l√Ω mic t·ª± ƒë·ªông\n"
                "‚Ä¢ Ph√π Th·ªßy, Th·ª£ SƒÉn, S√≥i √Åm S√°t ch·ªâ c√≥ m·ªôt l·∫ßn s·ª≠ d·ª•ng kh·∫£ nƒÉng ƒë·∫∑c bi·ªát trong game\n"
                "‚Ä¢ Ng∆∞·ªùi ch·∫øt c√≥ th·ªÉ n√≥i chuy·ªán v·ªõi nhau trong k√™nh dead-chat\n"
                "‚Ä¢ S√≥i c√≥ th·ªÉ th·∫£o lu·∫≠n trong k√™nh wolf-chat v√†o ban ƒë√™m"
            ),
            inline=False
        )
        
        return embed
    
    @app_commands.command(name="roles_list", description="Hi·ªÉn th·ªã danh s√°ch vai tr√≤ trong game")
    async def roles_list(self, interaction: discord.Interaction):
        await interaction.response.defer()
        
        embed = discord.Embed(
            title="Danh S√°ch Vai Tr√≤ Ma S√≥i",
            description="Danh s√°ch c√°c vai tr√≤ trong game, ph√¢n chia theo phe. Chi ti·∫øt v·ªÅ c√°c vai tr√≤ c√≥ th·ªÉ xem t·∫°i [ƒë√¢y](https://www.dewolfvie.net/vn/chucnang).",
            color=discord.Color.blue()
        )

        # Danh s√°ch vai tr√≤ Phe D√¢n
        villager_roles_list = "\n".join([f"**{role}**" for role in VILLAGER_ROLES])
        embed.add_field(name="üü¢ Phe D√¢n", value=villager_roles_list, inline=False)

        # Danh s√°ch vai tr√≤ Phe S√≥i
        werewolf_roles_list = "\n".join([f"**{role}**" for role in WEREWOLF_ROLES])
        embed.add_field(name="üî¥ Phe S√≥i", value=werewolf_roles_list, inline=False)

        embed.set_footer(text=BOT_VERSION)
        await interaction.followup.send(embed=embed)
    
    @app_commands.command(name="roles", description="Xem m√¥ t·∫£ chi ti·∫øt c·ªßa m·ªôt vai tr√≤ c·ª• th·ªÉ")
    @app_commands.describe(role="Ch·ªçn vai tr√≤ ƒë·ªÉ xem chi ti·∫øt")
    @app_commands.choices(role=[app_commands.Choice(name=role, value=role) for role in ROLES])
    async def roles(self, interaction: discord.Interaction, role: str):
        await interaction.response.defer()
        
        if role not in ROLE_LINKS:
            await interaction.followup.send("Vai tr√≤ kh√¥ng h·ª£p l·ªá!")
            return
            
        embed = discord.Embed(
            title=f"Chi Ti·∫øt Vai Tr√≤: {role}",
            description=ROLE_DESCRIPTIONS.get(role, "Kh√¥ng c√≥ m√¥ t·∫£"),
            color=discord.Color.blue()
        )
        
        # X√°c ƒë·ªãnh phe
        team = "Phe S√≥i" if role in WEREWOLF_ROLES else "Phe D√¢n"
        embed.add_field(name="Phe", value=team, inline=True)
        
        # Th√™m link tham kh·∫£o
        link = ROLE_LINKS[role]
        embed.add_field(name="Tham Kh·∫£o", value=f"[Chi ti·∫øt vai tr√≤]({link})", inline=True)
        
        embed.set_footer(text=BOT_VERSION)
        await interaction.followup.send(embed=embed)
    
    @app_commands.command(name="leaderboard", description="Hi·ªÉn th·ªã b·∫£ng vinh danh")
    @app_commands.describe(scope="Ph·∫°m vi hi·ªÉn th·ªã", limit="S·ªë l∆∞·ª£ng ng∆∞·ªùi hi·ªÉn th·ªã")
    @app_commands.choices(scope=[
        app_commands.Choice(name="Server n√†y", value="server"),
        app_commands.Choice(name="T·∫•t c·∫£ server", value="global")
    ])
    async def leaderboard(self, interaction: discord.Interaction, 
                        scope: str = "server", 
                        limit: app_commands.Range[int, 5, 20] = 10):
        await interaction.response.defer()
        
        guild_id = interaction.guild.id
        
        try:
            if scope == "server":
                records = await get_leaderboard(guild_id, limit)
                title = f"üèÜ B·∫£ng x·∫øp h·∫°ng - Top {limit} (Server: {interaction.guild.name})"
            else:
                records = await get_leaderboard(None, limit)
                title = f"üèÜ B·∫£ng x·∫øp h·∫°ng To√†n C·∫ßu - Top {limit}"
            
            if not records:
                await interaction.followup.send("Ch∆∞a c√≥ d·ªØ li·ªáu leaderboard.")
                return
            
            embed = discord.Embed(
                title=title,
                color=discord.Color.gold()
            )
            
            for i, record in enumerate(records, start=1):
                medal = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}."
                embed.add_field(
                    name=f"{medal} {record['player_name']}",
                    value=f"ƒêi·ªÉm: **{record['score']}** | S·ªë game: {record.get('games_played', 'N/A')}",
                    inline=False
                )
            
            embed.set_footer(text=BOT_VERSION)
            await interaction.followup.send(embed=embed)
            
        except Exception as e:
            logger.error(f"Error fetching leaderboard: {e}")
            await interaction.followup.send(f"L·ªói khi l·∫•y d·ªØ li·ªáu leaderboard: {str(e)[:100]}...")

async def setup(bot):
    await bot.add_cog(InfoCommands(bot))