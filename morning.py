# phases/morning.py
# Module qu·∫£n l√Ω c√°c pha s√°ng trong game

import discord
import logging
import asyncio
from typing import Dict, List, Optional

from constants import GIF_URLS, AUDIO_FILES
from utils.api_utils import play_audio, countdown, safe_send_message
from phases.voting import voting_phase

logger = logging.getLogger(__name__)

async def morning_phase(interaction: discord.Interaction, game_state):
    """
    X·ª≠ l√Ω pha s√°ng trong game
    
    Args:
        interaction (discord.Interaction): Interaction g·ªëc
        game_state (dict): Tr·∫°ng th√°i game hi·ªán t·∫°i
    """
    if not game_state["is_game_running"] or game_state["is_game_paused"]:
        logger.info("morning_phase: Game stopped or paused, skipping")
        return
        
    # ƒê·∫∑t phase s·ªõm ƒë·ªÉ c√≥ th·ªÉ ki·ªÉm tra ·ªü c√°c h√†m kh√°c
    game_state["phase"] = "morning"
    game_state["votes"].clear()  # X√≥a phi·∫øu b·∫ßu t·ª´ ng√†y tr∆∞·ªõc
    
    # Reset tr·∫°ng th√°i vote skip n·∫øu c√≥
    game_state["skip_vote_active"] = False
    
    # L∆∞u l·∫°i c√°c th√¥ng tin quan tr·ªçng cho pha hi·ªán t·∫°i
    game_state["current_phase_start_time"] = asyncio.get_event_loop().time()
    
    # L·∫•y v√† ki·ªÉm tra c√°c k√™nh c·∫ßn thi·∫øt
    main_channel = interaction.client.get_channel(game_state["voice_channel_id"])
    text_channel = game_state.get("text_channel")
    
    if not text_channel:
        logger.error("morning_phase: text_channel is None, cannot proceed")
        return
    
    # X·ª≠ l√Ω ng∆∞·ªùi b·ªã nguy·ªÅn t·ª´ ƒë√™m tr∆∞·ªõc
    if game_state["demon_werewolf_cursed_player"] is not None:
        await handle_cursed_player(interaction, game_state)
    
    try:
        # Thi·∫øt l·∫≠p quy·ªÅn chat cho ng∆∞·ªùi c√≤n s·ªëng
        guild = interaction.guild
        villager_role = guild.get_role(game_state["villager_role_id"])
        if text_channel and villager_role:
            # Thi·∫øt l·∫≠p quy·ªÅn chat m·ªôt l·∫ßn cho to√†n b·ªô channel thay v√¨ t·ª´ng ng∆∞·ªùi m·ªôt
            await text_channel.set_permissions(guild.default_role, send_messages=True)
            await text_channel.set_permissions(villager_role, send_messages=True)
            
        # Di chuy·ªÉn t·∫•t c·∫£ ng∆∞·ªùi ch∆°i v·ªÅ main channel trong m·ªôt coroutine
        move_tasks = []
        for user_id in game_state["players"]:
            member = game_state["member_cache"].get(user_id)
            if member and member.voice and member.voice.channel:
                move_tasks.append(member.move_to(main_channel))
                
        if move_tasks:
            await asyncio.gather(*move_tasks)
            
        # Hi·ªáu ·ª©ng v√† th√¥ng b√°o
        embed = discord.Embed(
            title="‚òÄÔ∏è B√¨nh Minh",
            description=("M·ªçi ng∆∞·ªùi th·ª©c d·∫≠y! Th·∫£o lu·∫≠n trong " + 
                        ("30" if game_state["is_first_day"] else "120") + 
                        " gi√¢y tr∆∞·ªõc khi b·ªè phi·∫øu."),
            color=discord.Color.gold()
        )
        embed.set_image(url=GIF_URLS["morning"])
        await text_channel.send(embed=embed)
        
        # Ph√°t √¢m thanh kh√¥ng ƒë·ªìng b·ªô ƒë·ªÉ kh√¥ng ch·∫∑n ti·∫øn tr√¨nh
        asyncio.create_task(play_audio(AUDIO_FILES["morning"], game_state["voice_connection"]))
        
        # ƒê·∫øm ng∆∞·ª£c th·ªùi gian th·∫£o lu·∫≠n
        from config import TIMINGS
        discussion_time = TIMINGS["first_day"] if game_state["is_first_day"] else TIMINGS["morning_discussion"]
        await countdown(text_channel, discussion_time, "th·∫£o lu·∫≠n", game_state)
        
        if not game_state["is_game_running"] or game_state["is_game_paused"]:
            return
            
        # X·ª≠ l√Ω ng√†y ƒë·∫ßu ti√™n
        if game_state["is_first_day"]:
            game_state["is_first_day"] = False
            from phases.night import night_phase
            await night_phase(interaction, game_state)
            return
            
        # Ti·∫øp t·ª•c v·ªõi pha b·ªè phi·∫øu
        await voting_phase(interaction, game_state)
        
    except Exception as e:
        logger.error(f"Error in morning_phase: {str(e)}")
        import traceback
        traceback.print_exc()
        if text_channel:
            await text_channel.send(f"ƒê√£ x·∫£y ra l·ªói trong pha s√°ng: {str(e)[:100]}...")

async def handle_cursed_player(interaction: discord.Interaction, game_state):
    """
    X·ª≠ l√Ω ng∆∞·ªùi ch∆°i ƒë√£ b·ªã nguy·ªÅn b·ªüi S√≥i Qu·ª∑
    
    Args:
        interaction (discord.Interaction): Interaction g·ªëc
        game_state (dict): Tr·∫°ng th√°i game hi·ªán t·∫°i
    """
    cursed_id = game_state["demon_werewolf_cursed_player"]
    if cursed_id in game_state["players"] and game_state["players"][cursed_id]["status"] in ["alive", "wounded"]:
        # L∆∞u vai tr√≤ c≈© ƒë·ªÉ th√¥ng b√°o
        old_role = game_state["players"][cursed_id]["role"]
        
        # Chuy·ªÉn ƒë·ªïi vai tr√≤ th√†nh Werewolf
        game_state["players"][cursed_id]["role"] = "Werewolf"
        
        member = game_state["member_cache"].get(cursed_id)
        if member:
            # Th√™m Discord Werewolf role
            werewolf_role = interaction.guild.get_role(game_state["werewolf_role_id"])
            if werewolf_role and werewolf_role not in member.roles:
                await member.add_roles(werewolf_role)
            
            # Th√¥ng b√°o cho ng∆∞·ªùi b·ªã nguy·ªÅn
            embed = discord.Embed(
                title="üåô L·ªùi Nguy·ªÅn C·ªßa S√≥i Qu·ª∑",
                description=(
                    "B·∫°n ƒë√£ b·ªã nguy·ªÅn v√† tr·ªü th√†nh **S√≥i**!\n\n"
                    f"Vai tr√≤ c≈©: **{old_role}**\n"
                    "Vai tr√≤ m·ªõi: **Werewolf**\n\n"
                    "B·∫°n s·∫Ω th·ª©c d·∫≠y c√πng b·∫ßy S√≥i trong pha ƒë√™m v√† m·∫•t ch·ª©c nƒÉng c≈©."
                ),
                color=discord.Color.dark_red()
            )
            await member.send(embed=embed)
            
            # C·∫•p quy·ªÅn truy c·∫≠p wolf-chat
            if game_state["wolf_channel"]:
                await game_state["wolf_channel"].set_permissions(member, read_messages=True, send_messages=True)
                
                # Th√¥ng b√°o trong wolf-chat
                wolf_embed = discord.Embed(
                    title="üê∫ Th√†nh Vi√™n M·ªõi!",
                    description=f"**{member.display_name}** ƒë√£ b·ªã nguy·ªÅn v√† tr·ªü th√†nh S√≥i!\nVai tr√≤ c≈©: **{old_role}**",
                    color=discord.Color.dark_red()
                )
                await game_state["wolf_channel"].send(embed=wolf_embed)
        
        # Reset bi·∫øn nguy·ªÅn sau khi x·ª≠ l√Ω
        logger.info(f"Player {cursed_id} transformed from {old_role} into Werewolf due to curse")
        game_state["demon_werewolf_cursed_player"] = None
